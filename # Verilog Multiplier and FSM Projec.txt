# Verilog Multiplier and FSM Project

## 💡 Project Overview
This project implements a digital system in Verilog Hardware Description Language (HDL) that includes:
- A **multiplier module** to perform binary multiplication.
- A **Finite State Machine (FSM)** to control the sequence of operations.
- Supporting modules (e.g., adder, comparator, counter).
- A **top-level module** that connects everything together.

## 📂 Files Included
- `multiplier.v` — Multiplier module
- `adder.v` — Adder module
- `comparator.v` — Comparator module
- `CP.v` — FSM controller module
- `top.v` — Top-level module connecting all components
- `testbench.v` — Testbench for simulation

## ⚙️ How to Run
1. Open the project in your preferred Verilog simulator (e.g., ModelSim, Vivado, Icarus Verilog).
2. Compile all Verilog files.
3. Run the testbench (`testbench.v`).
4. Observe waveform outputs to verify the functionality.

## ✅ Features
- Modular design: Each functional block is implemented separately.
- FSM controller for sequential operations.

## 📌 Requirements
- Verilog simulator (ModelSim, Icarus Verilog, Vivado, etc.)
- Basic understanding of HDL simulation

## 🚀 Author
- FAIZ AHMAD
- [https://github.com/faiz1780/projects]


